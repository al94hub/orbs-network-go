version: 2
jobs:
  tests:
    docker:
      - image: circleci/golang:1.12.9
    resource_class: large
    steps:
      - checkout
      - run: ./.circleci/retry.sh 5 go get -u github.com/orbs-network/go-junit-report
      - run:
          command: ./test.sh
          no_output_timeout: 15m
      - store_artifacts:
          path: _out
          destination: test-output
      - store_artifacts:
          path: _reports
          destination: test-results
      - store_test_results:
          path: _reports

  races:
    docker:
      - image: circleci/golang:1.12.9
    resource_class: large
    steps:
      - checkout
      - run: ./.circleci/retry.sh 5 go get -u github.com/orbs-network/go-junit-report
      - run:
          command: ./test.races.sh
          no_output_timeout: 25m
      - store_artifacts:
          path: _out
          destination: test-output
      - store_artifacts:
          path: /go/src/github.com/orbs-network/orbs-network-go/_reports
          destination: test-results
      - store_test_results:
          path: _reports

  memory_leaks:
    docker:
      - image: circleci/golang:1.12.9
    resource_class: xlarge
    steps:
      - checkout
      - run: ./.circleci/retry.sh 5 go get -u github.com/orbs-network/go-junit-report
      - run: ./test.goroutine-leaks.sh
      - run: ./test.memory-leaks.sh

  flakiness:
    docker:
      - image: itamararjuan/golang_with_node_aws
    parallelism: 6
    resource_class: xlarge
    steps:
      - checkout
      - run: ./.circleci/retry.sh 5 go get -u github.com/orbs-network/go-junit-report
      - run:
          command: ./test.flakiness.sh
          no_output_timeout: 25m
      - store_artifacts:
          path: _out
          destination: test-output
      - store_artifacts:
          path: /go/src/github.com/orbs-network/orbs-network-go/_reports
          destination: test-results
      - store_test_results:
          path: _reports

  nightly:
    docker:
      - image: circleci/golang:1.12.9
    parallelism: 6
    resource_class: xlarge
    steps:
      - checkout
      - run:
          command: ./.circleci/nightly.sh
          no_output_timeout: 300m
      - store_artifacts:
          path: _out
          destination: test-output
      - store_artifacts:
          path: /go/src/github.com/orbs-network/orbs-network-go/_reports
          destination: test-results
      - store_test_results:
          path: _reports

  e2e:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run: ./.circleci/install-go.sh
      - run: ./.circleci/install-node.sh
      - run: ./.circleci/retry.sh 5 go get github.com/orbs-network/go-junit-report
      - run: ./docker/build/build.sh
      - run: ./.circleci/install-docker-compose.sh
      # Logs here belong to root
      - run: sudo rm -rf _logs
      - run:
          command: ./docker/test/test.sh
          name: "Docker test with Lean Helix Consensus"
          environment:
            CONSENSUSALGO: leanhelix
      - run: ./docker/test/gamma-e2e.sh
      - run: ./.circleci/release-internal.sh
      - store_test_results:
          path: _reports
      - store_artifacts:
          path: _logs
      - store_artifacts:
          path: _out

  call_marvin:
    docker:
      - image: circleci/golang:1.12.9
    steps:
      - checkout
      - run: ./.circleci/marvin-stress.sh

  success:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - run: echo 'Success'

  deploy_testnet:
    docker:
      - image: itamararjuan/golang_with_node_aws
    steps:
      - checkout
      - run: ./.circleci/set-aws-credentials.sh
      - run: ./.circleci/deploy-testnet.sh

  ganache_related_tests:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run: ./.circleci/install-go.sh
      - run: ./.circleci/retry.sh 5 go get github.com/orbs-network/go-junit-report
      - run: ./docker/test/ganache-related-test.sh
      - store_artifacts:
          path: _out
          destination: test-output
      - store_test_results:
          path: _reports

  e2e_testnet_benchmark:
    docker:
      - image: circleci/golang:1.12.9
    steps:
      - checkout
      - run: ./.circleci/retry.sh 5 go get -u github.com/orbs-network/go-junit-report
      - run: sleep 300
      - run: ./.circleci/e2e-testnet.sh 42 40
      - store_test_results:
          path: _reports

  e2e_testnet_leanhelix:
    docker:
      - image: circleci/golang:1.12.9
    steps:
      - checkout
      - run: ./.circleci/retry.sh 5 go get -u github.com/orbs-network/go-junit-report
      - run: sleep 300
      - run: ./.circleci/e2e-testnet.sh 2013 2011
      - store_test_results:
          path: _reports

  deploy_new_chain_pr_only:
    docker:
      - image: itamararjuan/golang_with_node_aws
    working_directory: /go/src/github.com/orbs-network/orbs-network-go/
    environment:
      BOOTSTRAP_URL: "https://boyar-testnet-bootstrap.s3-us-west-2.amazonaws.com/boyar/config.json"
      BOOTSTRAP_S3_URI: "s3://boyar-testnet-bootstrap/boyar/config.json"
      TESTNET_NODE_IP: "35.161.123.97"
      TESTNET_IGNORE_IPS: ""
    steps:
      - checkout
      - run: ./.circleci/retry.sh 5 go get github.com/orbs-network/go-junit-report
      - run: ./.circleci/chain_on_pr.sh
      - store_test_results:
          path: _reports
      - store_artifacts:
          path: _out

  release:
    machine: true
    steps:
      - checkout
      - run: ./.circleci/release.sh

  release_base_image:
    machine: true
    steps:
      - run: ./.circleci/release_base_image.sh

workflows:
  version: 2
  build:
    jobs:
      - tests:
          filters:
            tags:
              only: /^v.*/
      - races
      - memory_leaks
      - deploy_new_chain_pr_only:
          requires:
            - e2e
            - tests
          filters:
            branches:
              ignore: master
      - e2e:
          requires:
            - release_base_image
          filters:
            tags:
              only: /^v.*/
      - flakiness
      - ganache_related_tests
      - success:
          requires:
            - tests
            - e2e
      - deploy_testnet:
          requires:
            - e2e
          filters:
            branches:
              only:
                - master
      - e2e_testnet_benchmark:
          requires:
            - deploy_testnet
      - e2e_testnet_leanhelix:
          requires:
            - deploy_testnet
      - call_marvin:
          requires:
            - e2e_testnet_leanhelix
      - release:
          requires:
            - tests
            - e2e
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
      - release_base_image

  nightly:
    triggers:
      - schedule:
          cron: "0 23 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - nightly
